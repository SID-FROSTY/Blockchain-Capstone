// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let squareVerifier = artifacts.require('SquareVerifier');
let proof_ = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    describe('test verification with correct proof and incorrect proof', function(){

        beforeEach(async function () { 
            this.contract = await squareVerifier.new({from: account_one});
         })

        // Test verification with correct proof
        it('verification with correct proof',async function(){
            let verified = await this.contract.verifyTx.call(proof_.proof.a,proof_.proof.b,proof_.proof.c,proof_.inputs);
            assert.equal(verified,true,"verification is invalid");
        })
            
        // Test verification with incorrect proof
        it('verification with incorrect proof',async function(){
            proof_.inputs=[7,1];
            let verified = await this.contract.verifyTx.call(proof_.proof.a,proof_.proof.b,proof_.proof.c,proof_.inputs);
            assert.equal(verified,false,"verification is valid");
        })
    })
});